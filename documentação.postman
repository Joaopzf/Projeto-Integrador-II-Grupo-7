// PARA RODAR NO POSTMAN 
npx ts-node src/index.ts

// FUNÇÃO SIGN UP - cadastro 
// cria um novo usuário com as informações fornecidas (nome de usuário, e-mail, senha e data de nascimento)
Método: POST
URL: http://localhost:3000/api/signup
Selecionar no body: raw e JSON 
Body: 
{
    "username": "seu_usuario",
    "email": "seu_email@gmail.com",
    "password": "sua_senha",
    "date_of_birth": "sua_data_de_nascimento" // Formato: 'YYYY-MM-DD'
}

// FUNÇÃO LOGIN 
// para o usuário realizar o login - verifica as credenciais do usuário
Método: POST
URL: http://localhost:3000/api/login
Selecionar no body: raw e JSON 
Body: 
{
  "email": "email_que_deseja_verificar",
  "password": "senha_do_email"
}

// FUNÇÃO ADD NEW EVENT - adicionar novo evento 
// permite que o usuário crie um novo evento, especificando o nome, descrição, data e o ID do criador do evento
Método: POST
URL: http://localhost:3000/api/addNewEvent
Selecionar no body: raw e JSON 
Body: 
{
    "name": "nome_do_evento",
    "description": "descrição_do_evento",
    "date": "data_limite_do_evento", // Formato: 'YYYY-MM-DD'
    "createdBy": 1 // ID DO USUÁRIO QUE VAI CRIAR O EVENTO 
}

// FUNÇÃO GET EVENTS - obter eventos
// retorna uma lista de eventos filtrados pelo status escolhido (pendente, aprovado, rejeitado, finalizado)
Método: GET
URL: http://localhost:3000/api/getEvents?status=(colocar o tipo do satus que quero ver)

EX: 
- http://localhost:3000/getEvents?status=pending
- http://localhost:3000/getEvents?status=approved

- Pode ser: pending, approved, rejected, ou finalizado 

// FUNÇÃO DELETE EVENT - deletar evento 
// remove um evento específico do sistema, fornecendo o ID do evento e o ID do usuário que o criou
Método: Post 
URL: http://localhost:3000/api/deleteEvent
Ir em Headers e colocar: 
- Na coluna Key: Content-Type
- Na coluna Value: application/json
Body:
{
  "eventId": 2, // ID do evento que deseja deletar
  "userId": 1   // ID do usuário que criou o evento
}

// FUNÇÃO EVALUATE NEW EVENT - avaliar novo evento 
// permite que o moderador aprove ou rejeite um evento, se rejeitado, é necessário fornecer um motivo
Método: Post 
URL: http://localhost:3000/api/evaluate 
Ir em Headers e colocar: 
- Na coluna Key: Content-Type
- Na coluna Value: application/json

PARA APROVAR O EVENTO: 
Body:
{
    "eventId": "3", // ID do evento que deseja avaliar 
    "moderatorId": "5", // id do moderador que vai avaliar
    "action": "approve" 
}

PARA REJEITAR O EVENTO:
Body:  
{
    "eventId": "1", // ID do evento que deseja avaliar
    "moderatorId": "1", // id do moderador que vai avaliar
    "action": "reject",
    "reason": "Texto confuso" // porque o evento foi rejeitado 
}

// FUNÇÃO ADD FUNDS - adicionar fundos 
// adiciona um valor á conta de um usuário, com detalhes sobre a conta bancária (agência, conta, chave PIX)
Método: POST
URL: http://localhost:3000/api/addFunds 
Selecionar no body: raw e JSON 
Body: 
{
    "userId": 1, // ID do usuário cuja carteira você está atualizando
    "amount": 100, // O valor a ser adicionado
    "bankDetails": {
        "bank_name": "Banco Nome", // Nome do banco
        "agency_number": "1234", // Número da agencia do banco
        "account_number": "567890", // Número da conta
        "pix_key": "chave_pix@gmail.com" // chave do PIX 
    }
}

// FUNÇÃO WITHDRAW FUNDS - sacar fundos 
// permite que o usuário saque uma quantia de sua conta, fornecendo os detalhes da conta bancária
Método: POST
URL: http://localhost:3000/api/withdraw 
Selecionar no body: raw e JSON 
Body: 
{
    "userId": 1, // ID do usuário que deseja sacar 
    "amount": 100, // valor da quantidade que deseja sacar 
    "bankDetails": {
        "bank_name": "banco_sophia_godoy",
        "agency_number": "1234",
        "account_number": "567890",
        "pix_key": "exemplo_pix@gmail.com"
    }
}

// FUNÇÕES BET ON EVENT - apostar em evento
// registar uma aposta feita por um usuário em um evento específico, incluindo o valor da aposta
Método: POST
URL: http://localhost:3000/api/betOnEvent 
Selecionar no body: raw e JSON 
Body: 
{
  "email": "exemple@gmail.com", // email do usuário que irá apostar 
  "eventId": 7, // ID do evento que vai apostar o dinheiro
  "betAmount": 80.00 // Valor da aposta
}

// FUNÇÃO FINISH EVENT - finalizar evento 
// finaliza um evento específico e define o resultado que será distribuído entre os vencedores
Método: Post 
URL: http://localhost:3000/api/finish
Ir em Headers e colocar: 
- Na coluna Key: moderator-id
- Na coluna Value: 5 // Colocar o id do moderador que irá finalizar 
Body:
{
  "event_id": 1, // ID do evento que deseja finalizar 
  "result": 500.00 // Valor que será distribuído entre os vencedores do evento 
}

// FUNÇÃO SEARCH EVENT - pesquisar evento
// permite que os usuários pesquisem eventos com base em uma palavra-chave específica
Método: GET 
URL: http://localhost:3000/api/searchEvent?keyword=palavra-chave 

- Colocar no lugar de palavra-chave a palavra que deseja pesquisar 
